---
import Navigation from '../components/Navigation.astro';
import TableOfContents from '../components/TableOfContents.astro';
import '../styles/app.css';

interface Props {
  title?: string;
}

const { title = 'YDS Proposal' } = Astro.props;
const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A proposal to update the Yosemite Decimal System (YDS) to better describe off-trail hiking / backpacking terrain, e.g. Class 2 and 3 with fall risk & terrain modifiers.">
    <title>{title}</title>

    <!-- Preconnect to Adobe Typekit for faster font loading -->
    <link rel="preconnect" href="https://use.typekit.net" crossorigin>
    <link rel="dns-prefetch" href="https://use.typekit.net">

    <!-- Load Adobe Typekit CSS asynchronously to avoid render blocking -->
    <link rel="preload" href="https://p.typekit.net/p.css?s=1&k=jwy1fst&ht=tk&f=9939.9941&a=8496606&app=typekit&e=css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://p.typekit.net/p.css?s=1&k=jwy1fst&ht=tk&f=9939.9941&a=8496606&app=typekit&e=css"></noscript>

    <!-- Load GLightbox CSS asynchronously to avoid render blocking -->
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css"></noscript>
  </head>
  <body>
    <Navigation currentPath={currentPath} />

    <div class="content-wrapper">
      <aside class="sidebar">
        <TableOfContents />
      </aside>

      <main class="has-sidebar">
        <slot />
      </main>
    </div>

    <script is:inline src="https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js" defer></script>

    <script is:inline defer>
      // Initialize GLightbox after page loads
      document.addEventListener('DOMContentLoaded', function() {
        if (typeof GLightbox !== 'undefined') {
          const lightbox = GLightbox({
            moreLength: 0
          });
        }

        // Add scroll highlighting for TOC
        const tocLinks = document.querySelectorAll('.toc-link');
        if (tocLinks.length > 0) {
          const headings = document.querySelectorAll('main h2, main h3');

          const observerOptions = {
            rootMargin: '-80px 0px -80% 0px',
            threshold: 0
          };

          const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                const id = entry.target.getAttribute('id');
                tocLinks.forEach(link => {
                  link.classList.remove('active');
                  if (link.getAttribute('href') === `#${id}`) {
                    link.classList.add('active');
                  }
                });
              }
            });
          }, observerOptions);

          headings.forEach(heading => {
            observer.observe(heading);
          });
        }
      });
    </script>
  </body>
</html>
